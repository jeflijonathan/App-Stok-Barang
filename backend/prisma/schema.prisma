// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// add migration: npx prisma migrate dev 
// generate client: npx prisma generate

model Role {
  id Int @id() @default(autoincrement())
  name String  @unique
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  user User[]
}

model User {
  id            String           @id @default(uuid())
  username      String
  email         String           @unique
  password      String
  roleId        Int
  role          Role             @relation(fields: [roleId], references: [id], onDelete: Cascade)
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  status        Boolean
  refreshTokens RefreshToken[]        
  resetTokens   PasswordResetToken[]
}

model PasswordResetToken {
  id            String        @id @default(uuid())
  token         String        @unique                  
  userId        String        @unique
  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt     DateTime 
  used          Boolean       @default(false)
  createdAt     DateTime      @default(now())
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    String
  ipAddress   String? 
  userAgent   String? 
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  expiresAt DateTime
}



