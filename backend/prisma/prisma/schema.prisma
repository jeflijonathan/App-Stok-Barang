// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Role {
  id       Int      @id() @default(autoincrement())
  name     String
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  user     User[]
}

model User {
  id            String               @id @default(uuid())
  username      String
  email         String               @unique
  password      String
  roleId        Int
  role          Role                 @relation(fields: [roleId], references: [id], onDelete: Cascade)
  createdAt     DateTime             @default(now())
  updatedAt     DateTime             @updatedAt
  refreshTokens RefreshToken[]
  sessions      Session[]
  resetTokens   PasswordResetToken[]
}

model PasswordResetToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
}

model RefreshToken {
  id          String   @id @unique @default(uuid())
  hashedToken String   @unique
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  revoked     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  expireAt    DateTime
}

model Session {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  token     String
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model FileUpload {
  urlID     String   @id()
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// model kontainer {
//   noKontainer String @id()
//   ukuranKontainer String 
//   Lokasi String
//   Fotosebelum  String
//   Fotosesudah  String
//   harga String
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }
